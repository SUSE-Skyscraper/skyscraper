openapi: 3.0.3
info:
  title: Skyscraper
  description: Skyscraper
  version: 1.0.0
servers:
  - url: http://localhost:8080
paths:
  /healthz:
    get:
      description: Health check endpoint
      responses:
        200:
          description: OK
          content:
            application/json:
              schema:
                type: object

  /api/v1/caller/profile:
    get:
      description: Returns the user profile
      tags:
        - Caller
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/UserResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: Profile not found (not logged in as user, but maybe an API Key)
        '500':
          $ref: '#/components/responses/InternalError'

  /api/v1/caller/cloud_accounts:
    get:
      description: Returns a caller-scoped list of cloud accounts
      tags:
        - Caller
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/CloudAccountsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/v1/api_keys:
    get:
      description: Returns the user API keys
      tags:
        - API Keys
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/APIKeysResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'
    post:
      description: Creates a new API key
      tags:
        - API Keys
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/CreateAPIKeyRequest'
      responses:
        '201':
          $ref: '#/components/responses/APIKeyResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'
  /api/v1/api_keys/{id}:
    get:
      description: Returns the user API key
      tags:
        - API Keys
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: API key ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/APIKeyResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '404':
          description: API key not found
        '500':
          $ref: '#/components/responses/InternalError'

  # Audit Logs
  /api/v1/audit_logs:
    get:
      description: Returns the audit logs
      tags:
        - Audit Logs
      security:
        - bearerAuth: []
      parameters:
        - in: query
          name: resource_id
          description: The id of the resource to filter the audit logs by
          required: false
          schema:
            type: string
        - in: query
          name: resource_type
          description: The type of the resource to filter the audit logs by
          required: false
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/AuditLogsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'

  # Cloud Accounts
  /api/v1/cloud_accounts:
    get:
      description: Returns the list of cloud accounts
      tags:
        - Cloud Accounts
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/CloudAccountsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'
  /api/v1/cloud_accounts/{id}:
    put:
      description: Updates an account for a cloud tenant
      tags:
        - Cloud Accounts
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: The account ID
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/UpdateAccountRequest'
      responses:
        '200':
          $ref: '#/components/responses/CloudAccountResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'
    get:
      description: Returns the account for a cloud tenant
      tags:
        - Cloud Accounts
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: The account ID
          required: true
          schema:
            type: string
      responses:
        '200':
          $ref: '#/components/responses/CloudAccountResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'
  /api/v1/cloud_accounts/{id}/organizational_unit:
    post:
      description: Assigns a cloud account to an Organizational Unit
      tags:
        - Cloud Accounts
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: The account ID
          required: true
          schema:
            type: string
      requestBody:
        $ref: '#/components/requestBodies/AccountOrganizationalUnitRequest'
      responses:
        '204':
          description: Successfully assigned the account to an organizational unit
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'

  # Cloud Tenants
  /api/v1/cloud_tenants:
    get:
      description: Returns the cloud tenants
      tags:
        - Cloud Tenants
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/CloudTenantsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'

  # Organizational Units
  /api/v1/organizational_units:
    get:
      description: Returns the list of organizational units
      tags:
        - Organizational Units
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/OrganizationalUnitsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'
    post:
      description: Creates a new organizational unit
      tags:
        - Organizational Units
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/CreateOrganizationalUnitsRequest'
      responses:
        '201':
          $ref: '#/components/responses/OrganizationalUnitResponse'
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'
  /api/v1/organizational_units/{id}:
    get:
      description: Gets the organizational unit with the given id
      tags:
        - Organizational Units
      parameters:
        - name: id
          in: path
          description: The account ID
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/OrganizationalUnitResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'
    delete:
      description: Deletes the organizational unit with the given id
      tags:
        - Organizational Units
      parameters:
        - name: id
          in: path
          description: The account ID
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Successfully deleted the organizational unit
        '400':
          $ref: '#/components/responses/BadRequestError'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'

  /api/v1/standard_tags:
    post:
      description: Creates a standard tag
      tags:
        - Standard Tags
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/CreateStandardTagRequest'
      responses:
        '201':
          $ref: '#/components/responses/StandardTagResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'
    get:
      description: Returns the standard tags
      tags:
        - Standard Tags
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/StandardTagsResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'
  /api/v1/standard_tags/{id}:
    put:
      description: Updates a standard tag
      tags:
        - Standard Tags
      parameters:
        - name: id
          in: path
          description: The standard tag ID
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      requestBody:
        $ref: '#/components/requestBodies/UpdateStandardTagRequest'
      responses:
        '200':
          $ref: '#/components/responses/StandardTagResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'

  # Users
  /api/v1/users:
    get:
      description: Returns the list of users
      tags:
        - Users
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/UsersResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'
  /api/v1/users/{id}:
    get:
      description: Returns the user with the given id
      tags:
        - Users
      parameters:
        - name: id
          in: path
          description: The account ID
          required: true
          schema:
            type: string
      security:
        - bearerAuth: []
      responses:
        '200':
          $ref: '#/components/responses/UserResponse'
        '401':
          $ref: '#/components/responses/UnauthorizedError'
        '500':
          $ref: '#/components/responses/InternalError'
components:
  requestBodies:
    CreateAPIKeyRequest:
      description: Request body for creating an API key
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  owner:
                    type: string
                  description:
                    type: string
    CreateOrganizationalUnitsRequest:
      description: Request body for creating an Organizational Unit
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  display_name:
                    type: string
                  parent_id:
                    type: string
    CreateStandardTagRequest:
      description: Request body for creating a standard tag
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  display_name:
                    type: string
                  key:
                    type: string
                  required:
                    type: boolean
                  description:
                    type: string
    UpdateStandardTagRequest:
      description: Request body for updating a standard tag
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  display_name:
                    type: string
                  key:
                    type: string
                  required:
                    type: boolean
                  description:
                    type: string
    AccountOrganizationalUnitRequest:
      description: Request body for assigning an account to an organizational unit
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  organizational_unit_id:
                    type: string
    UpdateAccountRequest:
      description: Request body for updating an account
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: object
                properties:
                  tags_desired:
                    type: object
  responses:
    BadRequestError:
      description: Bad request
    UnauthorizedError:
      description: Access token is missing or invalid
    InternalError:
      description: An unexpected internal error occurred
    APIKeysResponse:
      description: A response containing the API keys
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/APIKey'
    APIKeyResponse:
      description: A response containing the API key
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/APIKey'
    OrganizationalUnitResponse:
      description: A response containing the organizational units
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/OrganizationalUnit'
    OrganizationalUnitsResponse:
      description: A response containing the organizational units
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationalUnit'
    CloudTenantsResponse:
      description: A response containing the cloud tenants
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/CloudTenant'
    AuditLogsResponse:
      description: A response containing the audit logs
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/AuditLog'
              included:
                type: array
                items:
                  $ref: '#/components/schemas/Included'
    CloudAccountsResponse:
      description: A response containing the list of accounts
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/CloudAccount'
    CloudAccountResponse:
      description: A response containing the account
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/CloudAccount'
    UsersResponse:
      description: A response containing a list of users
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/User'
    UserResponse:
      description: A response containing a user
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/User'
    StandardTagResponse:
      description: A response containing a standard tag
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                $ref: '#/components/schemas/Tag'
    StandardTagsResponse:
      description: A response containing a list of standard tags
      content:
        application/json:
          schema:
            type: object
            properties:
              data:
                type: array
                items:
                  $ref: '#/components/schemas/Tag'
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    OrganizationalUnit:
      type: object
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            display_name:
              type: string
            parent_id:
              type: string
    APIKey:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            secret:
              type: string
            owner:
              type: string
            description:
              type: string
            created_at:
              type: string
            updated_at:
              type: string
    AuditLog:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            created_at:
              type: string
            updated_at:
              type: string
            user_id:
              type: string
            resource_id:
              type: string
            resource_type:
              type: string
            message:
              type: string
        relationships:
          type: object
          properties:
            user:
              type: object
              properties:
                data:
                  type: object
                  properties:
                    id:
                      type: string
                    type:
                      type: string
    Included:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
    User:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          required:
            - username
          properties:
            username:
              type: string
            locale:
              type: string
            active:
              type: boolean
            created_at:
              type: string
            updated_at:
              type: string
    CloudTenant:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            cloud_provider:
              type: string
            tenant_id:
              type: string
            name:
              type: string
            active:
              type: boolean
            created_at:
              type: string
            updated_at:
              type: string

    Tag:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            display_name:
              type: string
            description:
              type: string
            key:
              type: string
    CloudAccount:
      type: object
      required:
        - id
        - type
      properties:
        id:
          type: string
        type:
          type: string
        attributes:
          type: object
          properties:
            cloud_provider:
              type: string
            tenant_id:
              type: string
            account_id:
              type: string
            name:
              type: string
            tags_current:
              type: object
              additionalProperties:
                type: string
            tags_desired:
              type: object
              additionalProperties:
                type: string
            tags_drift_detected:
              type: boolean
            active:
              type: boolean
            created_at:
              type: string
            updated_at:
              type: string
security:
  - bearerAuth: []
